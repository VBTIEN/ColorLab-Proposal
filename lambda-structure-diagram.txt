📦 AWS Lambda Function Structure (19.5MB)
│
├── 🎯 AWS Lambda Console View (What you see)
│   └── lambda_function.py (Entry Point Only)
│
└── 🔍 Actual Lambda Runtime (/var/task/) (What's really there)
    │
    ├── 📝 Your Application Code (~50KB)
    │   ├── lambda_function.py          # Entry point
    │   ├── app/                        # FastAPI application
    │   │   ├── __init__.py
    │   │   ├── main.py                 # FastAPI app
    │   │   ├── routers/                # API endpoints
    │   │   │   ├── __init__.py
    │   │   │   ├── health.py           # Health checks
    │   │   │   ├── analyze.py          # Image analysis
    │   │   │   └── docs.py             # Documentation
    │   │   ├── services/               # Business logic
    │   │   │   ├── __init__.py
    │   │   │   └── image_analyzer.py   # Analysis service
    │   │   ├── core/                   # Configuration
    │   │   │   ├── __init__.py
    │   │   │   └── config.py           # Settings
    │   │   └── utils/                  # Utilities
    │   │       ├── __init__.py
    │   │       ├── lambda_adapter.py   # Lambda adapter
    │   │       └── logger.py           # Logging
    │   └── requirements.txt            # Dependencies list
    │
    ├── 🔧 AWS SDK (~15MB)
    │   ├── boto3/                      # AWS SDK for Python
    │   │   ├── __init__.py
    │   │   ├── session.py
    │   │   ├── resources/
    │   │   └── ... (100+ files)
    │   └── botocore/                   # Core AWS library
    │       ├── __init__.py
    │       ├── client.py
    │       ├── credentials.py
    │       └── ... (200+ files)
    │
    ├── 🌐 FastAPI Framework (~3MB)
    │   ├── fastapi/                    # FastAPI core
    │   │   ├── __init__.py
    │   │   ├── applications.py
    │   │   ├── routing.py
    │   │   └── ... (50+ files)
    │   ├── starlette/                  # ASGI framework
    │   │   ├── __init__.py
    │   │   ├── applications.py
    │   │   └── ... (30+ files)
    │   ├── pydantic/                   # Data validation
    │   │   ├── __init__.py
    │   │   ├── main.py
    │   │   └── ... (40+ files)
    │   └── uvicorn/                    # ASGI server
    │       ├── __init__.py
    │       ├── main.py
    │       └── ... (20+ files)
    │
    ├── 🐍 Python Dependencies (~1.5MB)
    │   ├── typing_extensions/          # Type hints
    │   ├── annotated_types/            # Pydantic types
    │   ├── pydantic_core/              # Pydantic core
    │   ├── sniffio/                    # Async detection
    │   ├── anyio/                      # Async library
    │   ├── idna/                       # Domain names
    │   ├── certifi/                    # SSL certificates
    │   ├── charset_normalizer/         # Character encoding
    │   ├── urllib3/                    # HTTP library
    │   └── ... (20+ other libraries)
    │
    └── 🗂️ Python Runtime Files
        ├── __pycache__/                # Compiled Python files
        ├── *.pyc                       # Bytecode files
        ├── *.dist-info/                # Package metadata
        └── *.egg-info/                 # Package info

🔄 Execution Flow:
1. API Gateway → Lambda Function
2. Lambda loads lambda_function.py
3. lambda_function.py imports from app/
4. app/ uses fastapi, boto3, etc.
5. All dependencies are available in /var/task/

💡 Why Console shows only 1 file:
- UI Simplification
- File size limits (<3MB for editing)
- Focus on entry point
- Performance optimization
