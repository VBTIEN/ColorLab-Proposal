#!/bin/bash

echo "üé® ColorLab Professional Color Analysis - Main URL Demo"
echo "======================================================"
echo ""

# Main URL
COLORLAB_URL="http://ai-image-analyzer-web-1751723364.s3-website-ap-southeast-1.amazonaws.com/"
API_URL="https://spsvd9ec7i.execute-api.ap-southeast-1.amazonaws.com/prod"

echo "üåü Welcome to ColorLab - Professional Color Analysis Tool!"
echo "Now running at the main URL for easy access!"
echo ""
echo "üìä Features:"
echo "  ‚úÖ 9 Professional Analysis Tabs"
echo "  ‚úÖ AI-Powered Color Recognition"
echo "  ‚úÖ Real-time Processing"
echo "  ‚úÖ Modern Responsive Interface"
echo "  ‚úÖ Advanced Color Science"
echo "  ‚úÖ Glass Effect Design"
echo "  ‚úÖ Professional Branding"
echo ""

echo "üîç Quick System Check..."
echo "------------------------"

# Check API health
echo "Checking API status..."
api_status=$(curl -s "$API_URL/health" | grep -o '"success": true' || echo "failed")
if [ "$api_status" = '"success": true' ]; then
    echo "‚úÖ API is healthy and ready"
    api_version=$(curl -s "$API_URL/health" | grep -o '"version": "[^"]*"' | cut -d'"' -f4)
    echo "   Version: $api_version"
else
    echo "‚ùå API check failed"
fi

# Check main interface accessibility
echo "Checking ColorLab main interface..."
interface_status=$(curl -s -o /dev/null -w "%{http_code}" "$COLORLAB_URL")
if [ "$interface_status" = "200" ]; then
    echo "‚úÖ ColorLab interface is accessible at main URL"
else
    echo "‚ùå Interface check failed"
fi

# Check for ColorLab content
echo "Verifying ColorLab content..."
content_check=$(curl -s "$COLORLAB_URL" | grep -o "ColorLab - Professional Color Analysis" || echo "failed")
if [ "$content_check" = "ColorLab - Professional Color Analysis" ]; then
    echo "‚úÖ ColorLab content verified"
else
    echo "‚ùå ColorLab content check failed"
fi

echo ""
echo "üöÄ ColorLab is LIVE at Main URL!"
echo "================================"
echo ""
echo "üåê ColorLab Main URL:"
echo "$COLORLAB_URL"
echo ""
echo "üìã How to Use ColorLab:"
echo "1. Click the URL above or copy-paste into your browser"
echo "2. Upload an image (JPG, PNG, GIF supported)"
echo "3. Click 'Analyze Image' button"
echo "4. Wait for AI processing (5-15 seconds)"
echo "5. Explore all 9 professional analysis tabs:"
echo ""
echo "   üéØ Analysis Tabs:"
echo "   ‚Ä¢ Overview - General color analysis & dominant colors"
echo "   ‚Ä¢ Frequency - Color frequency distribution analysis"
echo "   ‚Ä¢ K-Means - Advanced color clustering analysis"
echo "   ‚Ä¢ Regional - Regional color analysis by image areas"
echo "   ‚Ä¢ Histograms - Detailed color histograms (RGB, HSV)"
echo "   ‚Ä¢ Color Spaces - Multi-space analysis (RGB, HSV, LAB)"
echo "   ‚Ä¢ Characteristics - Color temperature, harmony, mood"
echo "   ‚Ä¢ AI Training - Machine learning training data"
echo "   ‚Ä¢ CNN Analysis - Deep learning color classification"
echo ""
echo "‚ö° Advanced Features:"
echo "‚Ä¢ Automatic retry mechanism for reliability"
echo "‚Ä¢ Real-time API status monitoring"
echo "‚Ä¢ Professional color science algorithms"
echo "‚Ä¢ Responsive design for all devices"
echo "‚Ä¢ Glass effect modern UI with gradients"
echo "‚Ä¢ Professional ColorLab branding"
echo "‚Ä¢ 30-second timeout protection"
echo "‚Ä¢ Error handling and user feedback"
echo ""
echo "üéØ Best Image Types for Analysis:"
echo "‚Ä¢ Landscape photos (natural color palettes)"
echo "‚Ä¢ Product photos (commercial color analysis)"
echo "‚Ä¢ Artwork & designs (artistic color analysis)"
echo "‚Ä¢ Screenshots (digital interface colors)"
echo "‚Ä¢ Fashion photos (style and trend analysis)"
echo "‚Ä¢ Architecture (structural color harmony)"
echo ""

# Option to open browser automatically
echo "üåê Would you like to open ColorLab in your default browser? (y/n)"
read -r open_browser

if [ "$open_browser" = "y" ] || [ "$open_browser" = "Y" ]; then
    echo "üöÄ Opening ColorLab Professional Color Analysis..."
    
    # Try different browser opening methods
    if command -v xdg-open > /dev/null; then
        xdg-open "$COLORLAB_URL"
        echo "‚úÖ Opened in default browser"
    elif command -v open > /dev/null; then
        open "$COLORLAB_URL"
        echo "‚úÖ Opened in default browser"
    elif command -v start > /dev/null; then
        start "$COLORLAB_URL"
        echo "‚úÖ Opened in default browser"
    else
        echo "‚ùå Could not auto-open browser"
        echo "Please manually open this URL:"
        echo "$COLORLAB_URL"
    fi
else
    echo "üìã Manual Access Instructions:"
    echo "Copy and paste this URL into your browser:"
    echo "$COLORLAB_URL"
fi

echo ""
echo "üé® Welcome to ColorLab Professional Experience!"
echo "=============================================="
echo ""
echo "üí° Pro Tips for Best Results:"
echo "‚Ä¢ Use high-quality images (minimum 500x500 pixels)"
echo "‚Ä¢ Ensure good lighting and contrast in photos"
echo "‚Ä¢ Try different image types for varied analysis"
echo "‚Ä¢ Explore all 9 tabs for comprehensive insights"
echo "‚Ä¢ Check the API status indicator (top-right)"
echo "‚Ä¢ Use the retry mechanism if analysis fails"
echo ""
echo "üîß Technical Specifications:"
echo "‚Ä¢ API Version: 14.0.0-complete-100-percent"
echo "‚Ä¢ Analysis Engine: complete_professional_color_science_with_ai"
echo "‚Ä¢ Accuracy Level: Maximum"
echo "‚Ä¢ AI Models: CNN Color Classifier, K-Means Clustering, LAB Color Analysis"
echo "‚Ä¢ Color Spaces: RGB, HSV, LAB"
echo "‚Ä¢ Processing Time: 5-15 seconds per image"
echo "‚Ä¢ Max Image Size: 10MB"
echo "‚Ä¢ Supported Formats: JPG, PNG, GIF, WebP"
echo ""
echo "üéâ Enjoy ColorLab - Where Color Science Meets AI!"
echo ""
echo "üìû Need Help?"
echo "‚Ä¢ Check the real-time API status in the interface"
echo "‚Ä¢ All error messages are displayed clearly"
echo "‚Ä¢ Analysis results are generated with professional accuracy"
echo "‚Ä¢ Each tab provides detailed color insights"
