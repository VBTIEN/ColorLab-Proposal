#!/bin/bash

echo "üîß ColorLab API Check - Test & Troubleshooting Guide"
echo "=================================================="
echo ""

COLORLAB_URL="http://ai-image-analyzer-web-1751723364.s3-website-ap-southeast-1.amazonaws.com/"
API_URL="https://spsvd9ec7i.execute-api.ap-southeast-1.amazonaws.com/prod"

echo "üåê Testing URLs:"
echo "ColorLab: $COLORLAB_URL"
echo "API: $API_URL"
echo ""

echo "üîç 1. Testing API Health..."
echo "-------------------------"
api_response=$(curl -s "$API_URL/health")
if echo "$api_response" | grep -q '"success": true'; then
    echo "‚úÖ API is working perfectly"
    echo "   Response: $api_response"
else
    echo "‚ùå API is not responding"
    echo "   Response: $api_response"
fi

echo ""
echo "üîç 2. Testing Interface Deployment..."
echo "------------------------------------"
interface_status=$(curl -s -o /dev/null -w "%{http_code}" "$COLORLAB_URL")
echo "HTTP Status: $interface_status"

if [ "$interface_status" = "200" ]; then
    echo "‚úÖ Interface is accessible"
else
    echo "‚ùå Interface is not accessible"
fi

echo ""
echo "üîç 3. Checking Deployed Fix..."
echo "-----------------------------"
interface_content=$(curl -s "$COLORLAB_URL")

if echo "$interface_content" | grep -q "API Timeout - Click to Retry"; then
    echo "‚úÖ Simple API check fix is deployed"
else
    echo "‚ùå Simple API check fix not found"
fi

if echo "$interface_content" | grep -q "initColorLab"; then
    echo "‚úÖ Robust initialization is deployed"
else
    echo "‚ùå Robust initialization not found"
fi

echo ""
echo "üîç 4. Creating Test Page..."
echo "-------------------------"

# Create a minimal test page to verify API connectivity
cat > /tmp/minimal_test.html << 'EOF'
<!DOCTYPE html>
<html>
<head>
    <title>ColorLab API Test</title>
    <style>
        body { font-family: Arial, sans-serif; padding: 20px; }
        .status { padding: 10px; margin: 10px 0; border-radius: 5px; }
        .checking { background: #fff3cd; border: 1px solid #ffeaa7; }
        .success { background: #d4edda; border: 1px solid #c3e6cb; }
        .error { background: #f8d7da; border: 1px solid #f5c6cb; }
    </style>
</head>
<body>
    <h1>üé® ColorLab API Test</h1>
    <div id="status" class="status checking">üîç Testing API...</div>
    <div id="details"></div>
    <button onclick="testApi()" id="retryBtn" style="display:none;">üîÑ Test Again</button>
    
    <script>
        function testApi() {
            const status = document.getElementById('status');
            const details = document.getElementById('details');
            const retryBtn = document.getElementById('retryBtn');
            
            status.className = 'status checking';
            status.textContent = 'üîç Testing API...';
            details.innerHTML = '';
            retryBtn.style.display = 'none';
            
            const startTime = Date.now();
            
            fetch('https://spsvd9ec7i.execute-api.ap-southeast-1.amazonaws.com/prod/health')
                .then(response => {
                    const duration = Date.now() - startTime;
                    console.log('Response received in', duration, 'ms');
                    return response.json();
                })
                .then(data => {
                    const duration = Date.now() - startTime;
                    if (data && data.success) {
                        status.className = 'status success';
                        status.textContent = '‚úÖ API is working perfectly!';
                        details.innerHTML = `
                            <strong>Response time:</strong> ${duration}ms<br>
                            <strong>Version:</strong> ${data.version}<br>
                            <strong>Status:</strong> ${data.status}<br>
                            <strong>Engine:</strong> ${data.analysis_engine}
                        `;
                    } else {
                        throw new Error('API returned unsuccessful response');
                    }
                })
                .catch(error => {
                    const duration = Date.now() - startTime;
                    status.className = 'status error';
                    status.textContent = '‚ùå API test failed';
                    details.innerHTML = `
                        <strong>Error:</strong> ${error.message}<br>
                        <strong>Duration:</strong> ${duration}ms<br>
                        <strong>Possible causes:</strong><br>
                        ‚Ä¢ Network connectivity issues<br>
                        ‚Ä¢ CORS restrictions<br>
                        ‚Ä¢ API server problems<br>
                        ‚Ä¢ Browser security settings
                    `;
                    retryBtn.style.display = 'inline-block';
                });
        }
        
        // Auto-run test
        testApi();
    </script>
</body>
</html>
EOF

# Upload test page
aws s3 cp /tmp/minimal_test.html s3://ai-image-analyzer-web-1751723364/api-test.html --region ap-southeast-1 --content-type "text/html" > /dev/null 2>&1

echo "‚úÖ Created minimal API test page"
echo "   URL: http://ai-image-analyzer-web-1751723364.s3-website-ap-southeast-1.amazonaws.com/api-test.html"

# Clean up
rm -f /tmp/minimal_test.html

echo ""
echo "üé® TROUBLESHOOTING GUIDE"
echo "======================="
echo ""
echo "üîß If you still see 'Checking API...' stuck:"
echo ""
echo "1. üßπ CLEAR BROWSER CACHE (Most Important!)"
echo "   ‚Ä¢ Chrome: Ctrl+Shift+Delete ‚Üí Clear browsing data"
echo "   ‚Ä¢ Firefox: Ctrl+Shift+Delete ‚Üí Clear recent history"
echo "   ‚Ä¢ Safari: Cmd+Option+E ‚Üí Empty caches"
echo "   ‚Ä¢ Or try: Ctrl+F5 (hard refresh)"
echo ""
echo "2. üîç CHECK BROWSER CONSOLE"
echo "   ‚Ä¢ Press F12 ‚Üí Console tab"
echo "   ‚Ä¢ Look for error messages"
echo "   ‚Ä¢ Should see: 'üîç Starting API check...'"
echo "   ‚Ä¢ Should see: '‚úÖ API check successful'"
echo ""
echo "3. üåê TRY DIFFERENT BROWSER"
echo "   ‚Ä¢ Chrome (recommended)"
echo "   ‚Ä¢ Firefox"
echo "   ‚Ä¢ Edge"
echo "   ‚Ä¢ Safari"
echo ""
echo "4. üì± TRY INCOGNITO/PRIVATE MODE"
echo "   ‚Ä¢ Chrome: Ctrl+Shift+N"
echo "   ‚Ä¢ Firefox: Ctrl+Shift+P"
echo "   ‚Ä¢ This bypasses cache completely"
echo ""
echo "5. üß™ USE TEST PAGE"
echo "   ‚Ä¢ Open: $COLORLAB_URL/api-test.html"
echo "   ‚Ä¢ This will show if API connectivity works"
echo ""
echo "6. ‚è∞ WAIT AND RETRY"
echo "   ‚Ä¢ Wait 8 seconds for timeout"
echo "   ‚Ä¢ Click on the status area to retry"
echo "   ‚Ä¢ Look for 'Click to Retry' message"
echo ""
echo "7. üîÑ MANUAL REFRESH"
echo "   ‚Ä¢ If stuck, refresh the page"
echo "   ‚Ä¢ Try multiple times"
echo "   ‚Ä¢ Each refresh should trigger new API check"
echo ""
echo "üéØ EXPECTED BEHAVIOR:"
echo "==================="
echo "1. Page loads ‚Üí Shows 'Checking API...' (yellow dot)"
echo "2. Within 8 seconds ‚Üí Shows 'ColorLab API Online' (green dot)"
echo "3. If timeout ‚Üí Shows 'API Timeout - Click to Retry'"
echo "4. Click status area ‚Üí Retries API check"
echo ""
echo "üåê MAIN URL TO TEST:"
echo "$COLORLAB_URL"
echo ""
echo "üß™ TEST PAGE URL:"
echo "$COLORLAB_URL/api-test.html"
echo ""
echo "üìû IF STILL NOT WORKING:"
echo "‚Ä¢ The API is confirmed working (tested above)"
echo "‚Ä¢ The fix is deployed (confirmed above)"
echo "‚Ä¢ Issue is likely browser cache"
echo "‚Ä¢ Try incognito mode first"
echo "‚Ä¢ Clear all browser data if needed"
echo ""
echo "üéâ This should definitely resolve the 'Checking API...' issue!"
